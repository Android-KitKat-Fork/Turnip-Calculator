{"version":3,"sources":["../node_modules/cuint/lib/uint32.js","../node_modules/cuint/lib/uint64.js","../node_modules/cuint/index.js","v2/calculator.js","v2/worker.js","../node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["UINT32","UINT64","require","possiblePatterns","patternReducer","initCalc","arg","plus","multiply","clone","xor","shiftRight","add","initContext","seed","$c0","$c1","$c2","$c3","getUINT32","$c","n","shiftLeft","splice","randint","min","max","toNumber","subtract","randfloat","a","b","val","or","view","DataView","ArrayBuffer","setUint32","valf","getFloat32","randbool","and","intceil","Math","trunc","calculate","pattern","basePrice","chance","whatPattern","sellPrices","Array","work","decPhaseLen1","decPhaseLen2","peakStart","hiPhaseLen1","hiPhaseLen2and3","hiPhaseLen3","rate","i","$average","array","index","count","next","$minMax","current","result","makePaternFilter","patterns","map","options","length","filter","v","optimizeFilters","filters","minMaxPatterns","$filters","from","patternFilter","yieldCalculate","total","average","minMax","Infinity","results","randomStart","random","ii","calculator","success","every","value","includes","forEach","yieldCalculateByTime","ms","flag","Date","now","done","module","exports","paused","instance","workUnit","setTimeout","postMessage","onmessage","data","action","args","console","log","OVERLAY_ID","OldModule","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","event","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","isArray","concat","Function","deps","cached","cache","some","cb"],"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","file":"worker.53c1c96d.js","sourceRoot":"../src","sourcesContent":["/**\n\tC-like unsigned 32 bits integers in Javascript\n\tCopyright (C) 2013, Pierre Curto\n\tMIT license\n */\n;(function (root) {\n\n\t// Local cache for typical radices\n\tvar radixPowerCache = {\n\t\t36: UINT32( Math.pow(36, 5) )\n\t,\t16: UINT32( Math.pow(16, 7) )\n\t,\t10: UINT32( Math.pow(10, 9) )\n\t,\t2:  UINT32( Math.pow(2, 30) )\n\t}\n\tvar radixCache = {\n\t\t36: UINT32(36)\n\t,\t16: UINT32(16)\n\t,\t10: UINT32(10)\n\t,\t2:  UINT32(2)\n\t}\n\n\t/**\n\t *\tRepresents an unsigned 32 bits integer\n\t * @constructor\n\t * @param {Number|String|Number} low bits     | integer as a string \t\t | integer as a number\n\t * @param {Number|Number|Undefined} high bits | radix (optional, default=10)\n\t * @return \n\t */\n\tfunction UINT32 (l, h) {\n\t\tif ( !(this instanceof UINT32) )\n\t\t\treturn new UINT32(l, h)\n\n\t\tthis._low = 0\n\t\tthis._high = 0\n\t\tthis.remainder = null\n\t\tif (typeof h == 'undefined')\n\t\t\treturn fromNumber.call(this, l)\n\n\t\tif (typeof l == 'string')\n\t\t\treturn fromString.call(this, l, h)\n\n\t\tfromBits.call(this, l, h)\n\t}\n\n\t/**\n\t * Set the current _UINT32_ object with its low and high bits\n\t * @method fromBits\n\t * @param {Number} low bits\n\t * @param {Number} high bits\n\t * @return ThisExpression\n\t */\n\tfunction fromBits (l, h) {\n\t\tthis._low = l | 0\n\t\tthis._high = h | 0\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromBits = fromBits\n\n\t/**\n\t * Set the current _UINT32_ object from a number\n\t * @method fromNumber\n\t * @param {Number} number\n\t * @return ThisExpression\n\t */\n\tfunction fromNumber (value) {\n\t\tthis._low = value & 0xFFFF\n\t\tthis._high = value >>> 16\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromNumber = fromNumber\n\n\t/**\n\t * Set the current _UINT32_ object from a string\n\t * @method fromString\n\t * @param {String} integer as a string\n\t * @param {Number} radix (optional, default=10)\n\t * @return ThisExpression\n\t */\n\tfunction fromString (s, radix) {\n\t\tvar value = parseInt(s, radix || 10)\n\n\t\tthis._low = value & 0xFFFF\n\t\tthis._high = value >>> 16\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromString = fromString\n\n\t/**\n\t * Convert this _UINT32_ to a number\n\t * @method toNumber\n\t * @return {Number} the converted UINT32\n\t */\n\tUINT32.prototype.toNumber = function () {\n\t\treturn (this._high * 65536) + this._low\n\t}\n\n\t/**\n\t * Convert this _UINT32_ to a string\n\t * @method toString\n\t * @param {Number} radix (optional, default=10)\n\t * @return {String} the converted UINT32\n\t */\n\tUINT32.prototype.toString = function (radix) {\n\t\treturn this.toNumber().toString(radix || 10)\n\t}\n\n\t/**\n\t * Add two _UINT32_. The current _UINT32_ stores the result\n\t * @method add\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.add = function (other) {\n\t\tvar a00 = this._low + other._low\n\t\tvar a16 = a00 >>> 16\n\n\t\ta16 += this._high + other._high\n\n\t\tthis._low = a00 & 0xFFFF\n\t\tthis._high = a16 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Subtract two _UINT32_. The current _UINT32_ stores the result\n\t * @method subtract\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.subtract = function (other) {\n\t\t//TODO inline\n\t\treturn this.add( other.clone().negate() )\n\t}\n\n\t/**\n\t * Multiply two _UINT32_. The current _UINT32_ stores the result\n\t * @method multiply\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.multiply = function (other) {\n\t\t/*\n\t\t\ta = a00 + a16\n\t\t\tb = b00 + b16\n\t\t\ta*b = (a00 + a16)(b00 + b16)\n\t\t\t\t= a00b00 + a00b16 + a16b00 + a16b16\n\n\t\t\ta16b16 overflows the 32bits\n\t\t */\n\t\tvar a16 = this._high\n\t\tvar a00 = this._low\n\t\tvar b16 = other._high\n\t\tvar b00 = other._low\n\n/* Removed to increase speed under normal circumstances (i.e. not multiplying by 0 or 1)\n\t\t// this == 0 or other == 1: nothing to do\n\t\tif ((a00 == 0 && a16 == 0) || (b00 == 1 && b16 == 0)) return this\n\n\t\t// other == 0 or this == 1: this = other\n\t\tif ((b00 == 0 && b16 == 0) || (a00 == 1 && a16 == 0)) {\n\t\t\tthis._low = other._low\n\t\t\tthis._high = other._high\n\t\t\treturn this\n\t\t}\n*/\n\n\t\tvar c16, c00\n\t\tc00 = a00 * b00\n\t\tc16 = c00 >>> 16\n\n\t\tc16 += a16 * b00\n\t\tc16 &= 0xFFFF\t\t// Not required but improves performance\n\t\tc16 += a00 * b16\n\n\t\tthis._low = c00 & 0xFFFF\n\t\tthis._high = c16 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Divide two _UINT32_. The current _UINT32_ stores the result.\n\t * The remainder is made available as the _remainder_ property on\n\t * the _UINT32_ object. It can be null, meaning there are no remainder.\n\t * @method div\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.div = function (other) {\n\t\tif ( (other._low == 0) && (other._high == 0) ) throw Error('division by zero')\n\n\t\t// other == 1\n\t\tif (other._high == 0 && other._low == 1) {\n\t\t\tthis.remainder = new UINT32(0)\n\t\t\treturn this\n\t\t}\n\n\t\t// other > this: 0\n\t\tif ( other.gt(this) ) {\n\t\t\tthis.remainder = this.clone()\n\t\t\tthis._low = 0\n\t\t\tthis._high = 0\n\t\t\treturn this\n\t\t}\n\t\t// other == this: 1\n\t\tif ( this.eq(other) ) {\n\t\t\tthis.remainder = new UINT32(0)\n\t\t\tthis._low = 1\n\t\t\tthis._high = 0\n\t\t\treturn this\n\t\t}\n\n\t\t// Shift the divisor left until it is higher than the dividend\n\t\tvar _other = other.clone()\n\t\tvar i = -1\n\t\twhile ( !this.lt(_other) ) {\n\t\t\t// High bit can overflow the default 16bits\n\t\t\t// Its ok since we right shift after this loop\n\t\t\t// The overflown bit must be kept though\n\t\t\t_other.shiftLeft(1, true)\n\t\t\ti++\n\t\t}\n\n\t\t// Set the remainder\n\t\tthis.remainder = this.clone()\n\t\t// Initialize the current result to 0\n\t\tthis._low = 0\n\t\tthis._high = 0\n\t\tfor (; i >= 0; i--) {\n\t\t\t_other.shiftRight(1)\n\t\t\t// If shifted divisor is smaller than the dividend\n\t\t\t// then subtract it from the dividend\n\t\t\tif ( !this.remainder.lt(_other) ) {\n\t\t\t\tthis.remainder.subtract(_other)\n\t\t\t\t// Update the current result\n\t\t\t\tif (i >= 16) {\n\t\t\t\t\tthis._high |= 1 << (i - 16)\n\t\t\t\t} else {\n\t\t\t\t\tthis._low |= 1 << i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Negate the current _UINT32_\n\t * @method negate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.negate = function () {\n\t\tvar v = ( ~this._low & 0xFFFF ) + 1\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = (~this._high + (v >>> 16)) & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Equals\n\t * @method eq\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.equals = UINT32.prototype.eq = function (other) {\n\t\treturn (this._low == other._low) && (this._high == other._high)\n\t}\n\n\t/**\n\t * Greater than (strict)\n\t * @method gt\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.greaterThan = UINT32.prototype.gt = function (other) {\n\t\tif (this._high > other._high) return true\n\t\tif (this._high < other._high) return false\n\t\treturn this._low > other._low\n\t}\n\n\t/**\n\t * Less than (strict)\n\t * @method lt\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.lessThan = UINT32.prototype.lt = function (other) {\n\t\tif (this._high < other._high) return true\n\t\tif (this._high > other._high) return false\n\t\treturn this._low < other._low\n\t}\n\n\t/**\n\t * Bitwise OR\n\t * @method or\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.or = function (other) {\n\t\tthis._low |= other._low\n\t\tthis._high |= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise AND\n\t * @method and\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.and = function (other) {\n\t\tthis._low &= other._low\n\t\tthis._high &= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise NOT\n\t * @method not\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.not = function() {\n\t\tthis._low = ~this._low & 0xFFFF\n\t\tthis._high = ~this._high & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise XOR\n\t * @method xor\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.xor = function (other) {\n\t\tthis._low ^= other._low\n\t\tthis._high ^= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift right\n\t * @method shiftRight\n\t * @param {Number} number of bits to shift\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.shiftRight = UINT32.prototype.shiftr = function (n) {\n\t\tif (n > 16) {\n\t\t\tthis._low = this._high >> (n - 16)\n\t\t\tthis._high = 0\n\t\t} else if (n == 16) {\n\t\t\tthis._low = this._high\n\t\t\tthis._high = 0\n\t\t} else {\n\t\t\tthis._low = (this._low >> n) | ( (this._high << (16-n)) & 0xFFFF )\n\t\t\tthis._high >>= n\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift left\n\t * @method shiftLeft\n\t * @param {Number} number of bits to shift\n\t * @param {Boolean} allow overflow\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.shiftLeft = UINT32.prototype.shiftl = function (n, allowOverflow) {\n\t\tif (n > 16) {\n\t\t\tthis._high = this._low << (n - 16)\n\t\t\tthis._low = 0\n\t\t\tif (!allowOverflow) {\n\t\t\t\tthis._high &= 0xFFFF\n\t\t\t}\n\t\t} else if (n == 16) {\n\t\t\tthis._high = this._low\n\t\t\tthis._low = 0\n\t\t} else {\n\t\t\tthis._high = (this._high << n) | (this._low >> (16-n))\n\t\t\tthis._low = (this._low << n) & 0xFFFF\n\t\t\tif (!allowOverflow) {\n\t\t\t\t// Overflow only allowed on the high bits...\n\t\t\t\tthis._high &= 0xFFFF\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate left\n\t * @method rotl\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.rotateLeft = UINT32.prototype.rotl = function (n) {\n\t\tvar v = (this._high << 16) | this._low\n\t\tv = (v << n) | (v >>> (32 - n))\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = v >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate right\n\t * @method rotr\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.rotateRight = UINT32.prototype.rotr = function (n) {\n\t\tvar v = (this._high << 16) | this._low\n\t\tv = (v >>> n) | (v << (32 - n))\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = v >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Clone the current _UINT32_\n\t * @method clone\n\t * @return {Object} cloned UINT32\n\t */\n\tUINT32.prototype.clone = function () {\n\t\treturn new UINT32(this._low, this._high)\n\t}\n\n\tif (typeof define != 'undefined' && define.amd) {\n\t\t// AMD / RequireJS\n\t\tdefine([], function () {\n\t\t\treturn UINT32\n\t\t})\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t\t// Node.js\n\t\tmodule.exports = UINT32\n\t} else {\n\t\t// Browser\n\t\troot['UINT32'] = UINT32\n\t}\n\n})(this)\n","/**\n\tC-like unsigned 64 bits integers in Javascript\n\tCopyright (C) 2013, Pierre Curto\n\tMIT license\n */\n;(function (root) {\n\n\t// Local cache for typical radices\n\tvar radixPowerCache = {\n\t\t16: UINT64( Math.pow(16, 5) )\n\t,\t10: UINT64( Math.pow(10, 5) )\n\t,\t2:  UINT64( Math.pow(2, 5) )\n\t}\n\tvar radixCache = {\n\t\t16: UINT64(16)\n\t,\t10: UINT64(10)\n\t,\t2:  UINT64(2)\n\t}\n\n\t/**\n\t *\tRepresents an unsigned 64 bits integer\n\t * @constructor\n\t * @param {Number} first low bits (8)\n\t * @param {Number} second low bits (8)\n\t * @param {Number} first high bits (8)\n\t * @param {Number} second high bits (8)\n\t * or\n\t * @param {Number} low bits (32)\n\t * @param {Number} high bits (32)\n\t * or\n\t * @param {String|Number} integer as a string \t\t | integer as a number\n\t * @param {Number|Undefined} radix (optional, default=10)\n\t * @return \n\t */\n\tfunction UINT64 (a00, a16, a32, a48) {\n\t\tif ( !(this instanceof UINT64) )\n\t\t\treturn new UINT64(a00, a16, a32, a48)\n\n\t\tthis.remainder = null\n\t\tif (typeof a00 == 'string')\n\t\t\treturn fromString.call(this, a00, a16)\n\n\t\tif (typeof a16 == 'undefined')\n\t\t\treturn fromNumber.call(this, a00)\n\n\t\tfromBits.apply(this, arguments)\n\t}\n\n\t/**\n\t * Set the current _UINT64_ object with its low and high bits\n\t * @method fromBits\n\t * @param {Number} first low bits (8)\n\t * @param {Number} second low bits (8)\n\t * @param {Number} first high bits (8)\n\t * @param {Number} second high bits (8)\n\t * or\n\t * @param {Number} low bits (32)\n\t * @param {Number} high bits (32)\n\t * @return ThisExpression\n\t */\n\tfunction fromBits (a00, a16, a32, a48) {\n\t\tif (typeof a32 == 'undefined') {\n\t\t\tthis._a00 = a00 & 0xFFFF\n\t\t\tthis._a16 = a00 >>> 16\n\t\t\tthis._a32 = a16 & 0xFFFF\n\t\t\tthis._a48 = a16 >>> 16\n\t\t\treturn this\n\t\t}\n\n\t\tthis._a00 = a00 | 0\n\t\tthis._a16 = a16 | 0\n\t\tthis._a32 = a32 | 0\n\t\tthis._a48 = a48 | 0\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromBits = fromBits\n\n\t/**\n\t * Set the current _UINT64_ object from a number\n\t * @method fromNumber\n\t * @param {Number} number\n\t * @return ThisExpression\n\t */\n\tfunction fromNumber (value) {\n\t\tthis._a00 = value & 0xFFFF\n\t\tthis._a16 = value >>> 16\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromNumber = fromNumber\n\n\t/**\n\t * Set the current _UINT64_ object from a string\n\t * @method fromString\n\t * @param {String} integer as a string\n\t * @param {Number} radix (optional, default=10)\n\t * @return ThisExpression\n\t */\n\tfunction fromString (s, radix) {\n\t\tradix = radix || 10\n\n\t\tthis._a00 = 0\n\t\tthis._a16 = 0\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\n\t\t/*\n\t\t\tIn Javascript, bitwise operators only operate on the first 32 bits \n\t\t\tof a number, even though parseInt() encodes numbers with a 53 bits \n\t\t\tmantissa.\n\t\t\tTherefore UINT64(<Number>) can only work on 32 bits.\n\t\t\tThe radix maximum value is 36 (as per ECMA specs) (26 letters + 10 digits)\n\t\t\tmaximum input value is m = 32bits as 1 = 2^32 - 1\n\t\t\tSo the maximum substring length n is:\n\t\t\t36^(n+1) - 1 = 2^32 - 1\n\t\t\t36^(n+1) = 2^32\n\t\t\t(n+1)ln(36) = 32ln(2)\n\t\t\tn = 32ln(2)/ln(36) - 1\n\t\t\tn = 5.189644915687692\n\t\t\tn = 5\n\t\t */\n\t\tvar radixUint = radixPowerCache[radix] || new UINT64( Math.pow(radix, 5) )\n\n\t\tfor (var i = 0, len = s.length; i < len; i += 5) {\n\t\t\tvar size = Math.min(5, len - i)\n\t\t\tvar value = parseInt( s.slice(i, i + size), radix )\n\t\t\tthis.multiply(\n\t\t\t\t\tsize < 5\n\t\t\t\t\t\t? new UINT64( Math.pow(radix, size) )\n\t\t\t\t\t\t: radixUint\n\t\t\t\t)\n\t\t\t\t.add( new UINT64(value) )\n\t\t}\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromString = fromString\n\n\t/**\n\t * Convert this _UINT64_ to a number (last 32 bits are dropped)\n\t * @method toNumber\n\t * @return {Number} the converted UINT64\n\t */\n\tUINT64.prototype.toNumber = function () {\n\t\treturn (this._a16 * 65536) + this._a00\n\t}\n\n\t/**\n\t * Convert this _UINT64_ to a string\n\t * @method toString\n\t * @param {Number} radix (optional, default=10)\n\t * @return {String} the converted UINT64\n\t */\n\tUINT64.prototype.toString = function (radix) {\n\t\tradix = radix || 10\n\t\tvar radixUint = radixCache[radix] || new UINT64(radix)\n\n\t\tif ( !this.gt(radixUint) ) return this.toNumber().toString(radix)\n\n\t\tvar self = this.clone()\n\t\tvar res = new Array(64)\n\t\tfor (var i = 63; i >= 0; i--) {\n\t\t\tself.div(radixUint)\n\t\t\tres[i] = self.remainder.toNumber().toString(radix)\n\t\t\tif ( !self.gt(radixUint) ) break\n\t\t}\n\t\tres[i-1] = self.toNumber().toString(radix)\n\n\t\treturn res.join('')\n\t}\n\n\t/**\n\t * Add two _UINT64_. The current _UINT64_ stores the result\n\t * @method add\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.add = function (other) {\n\t\tvar a00 = this._a00 + other._a00\n\n\t\tvar a16 = a00 >>> 16\n\t\ta16 += this._a16 + other._a16\n\n\t\tvar a32 = a16 >>> 16\n\t\ta32 += this._a32 + other._a32\n\n\t\tvar a48 = a32 >>> 16\n\t\ta48 += this._a48 + other._a48\n\n\t\tthis._a00 = a00 & 0xFFFF\n\t\tthis._a16 = a16 & 0xFFFF\n\t\tthis._a32 = a32 & 0xFFFF\n\t\tthis._a48 = a48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Subtract two _UINT64_. The current _UINT64_ stores the result\n\t * @method subtract\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.subtract = function (other) {\n\t\treturn this.add( other.clone().negate() )\n\t}\n\n\t/**\n\t * Multiply two _UINT64_. The current _UINT64_ stores the result\n\t * @method multiply\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.multiply = function (other) {\n\t\t/*\n\t\t\ta = a00 + a16 + a32 + a48\n\t\t\tb = b00 + b16 + b32 + b48\n\t\t\ta*b = (a00 + a16 + a32 + a48)(b00 + b16 + b32 + b48)\n\t\t\t\t= a00b00 + a00b16 + a00b32 + a00b48\n\t\t\t\t+ a16b00 + a16b16 + a16b32 + a16b48\n\t\t\t\t+ a32b00 + a32b16 + a32b32 + a32b48\n\t\t\t\t+ a48b00 + a48b16 + a48b32 + a48b48\n\n\t\t\ta16b48, a32b32, a48b16, a48b32 and a48b48 overflow the 64 bits\n\t\t\tso it comes down to:\n\t\t\ta*b\t= a00b00 + a00b16 + a00b32 + a00b48\n\t\t\t\t+ a16b00 + a16b16 + a16b32\n\t\t\t\t+ a32b00 + a32b16\n\t\t\t\t+ a48b00\n\t\t\t\t= a00b00\n\t\t\t\t+ a00b16 + a16b00\n\t\t\t\t+ a00b32 + a16b16 + a32b00\n\t\t\t\t+ a00b48 + a16b32 + a32b16 + a48b00\n\t\t */\n\t\tvar a00 = this._a00\n\t\tvar a16 = this._a16\n\t\tvar a32 = this._a32\n\t\tvar a48 = this._a48\n\t\tvar b00 = other._a00\n\t\tvar b16 = other._a16\n\t\tvar b32 = other._a32\n\t\tvar b48 = other._a48\n\n\t\tvar c00 = a00 * b00\n\n\t\tvar c16 = c00 >>> 16\n\t\tc16 += a00 * b16\n\t\tvar c32 = c16 >>> 16\n\t\tc16 &= 0xFFFF\n\t\tc16 += a16 * b00\n\n\t\tc32 += c16 >>> 16\n\t\tc32 += a00 * b32\n\t\tvar c48 = c32 >>> 16\n\t\tc32 &= 0xFFFF\n\t\tc32 += a16 * b16\n\t\tc48 += c32 >>> 16\n\t\tc32 &= 0xFFFF\n\t\tc32 += a32 * b00\n\n\t\tc48 += c32 >>> 16\n\t\tc48 += a00 * b48\n\t\tc48 &= 0xFFFF\n\t\tc48 += a16 * b32\n\t\tc48 &= 0xFFFF\n\t\tc48 += a32 * b16\n\t\tc48 &= 0xFFFF\n\t\tc48 += a48 * b00\n\n\t\tthis._a00 = c00 & 0xFFFF\n\t\tthis._a16 = c16 & 0xFFFF\n\t\tthis._a32 = c32 & 0xFFFF\n\t\tthis._a48 = c48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Divide two _UINT64_. The current _UINT64_ stores the result.\n\t * The remainder is made available as the _remainder_ property on\n\t * the _UINT64_ object. It can be null, meaning there are no remainder.\n\t * @method div\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.div = function (other) {\n\t\tif ( (other._a16 == 0) && (other._a32 == 0) && (other._a48 == 0) ) {\n\t\t\tif (other._a00 == 0) throw Error('division by zero')\n\n\t\t\t// other == 1: this\n\t\t\tif (other._a00 == 1) {\n\t\t\t\tthis.remainder = new UINT64(0)\n\t\t\t\treturn this\n\t\t\t}\n\t\t}\n\n\t\t// other > this: 0\n\t\tif ( other.gt(this) ) {\n\t\t\tthis.remainder = this.clone()\n\t\t\tthis._a00 = 0\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t\treturn this\n\t\t}\n\t\t// other == this: 1\n\t\tif ( this.eq(other) ) {\n\t\t\tthis.remainder = new UINT64(0)\n\t\t\tthis._a00 = 1\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t\treturn this\n\t\t}\n\n\t\t// Shift the divisor left until it is higher than the dividend\n\t\tvar _other = other.clone()\n\t\tvar i = -1\n\t\twhile ( !this.lt(_other) ) {\n\t\t\t// High bit can overflow the default 16bits\n\t\t\t// Its ok since we right shift after this loop\n\t\t\t// The overflown bit must be kept though\n\t\t\t_other.shiftLeft(1, true)\n\t\t\ti++\n\t\t}\n\n\t\t// Set the remainder\n\t\tthis.remainder = this.clone()\n\t\t// Initialize the current result to 0\n\t\tthis._a00 = 0\n\t\tthis._a16 = 0\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\t\tfor (; i >= 0; i--) {\n\t\t\t_other.shiftRight(1)\n\t\t\t// If shifted divisor is smaller than the dividend\n\t\t\t// then subtract it from the dividend\n\t\t\tif ( !this.remainder.lt(_other) ) {\n\t\t\t\tthis.remainder.subtract(_other)\n\t\t\t\t// Update the current result\n\t\t\t\tif (i >= 48) {\n\t\t\t\t\tthis._a48 |= 1 << (i - 48)\n\t\t\t\t} else if (i >= 32) {\n\t\t\t\t\tthis._a32 |= 1 << (i - 32)\n\t\t\t\t} else if (i >= 16) {\n\t\t\t\t\tthis._a16 |= 1 << (i - 16)\n\t\t\t\t} else {\n\t\t\t\t\tthis._a00 |= 1 << i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Negate the current _UINT64_\n\t * @method negate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.negate = function () {\n\t\tvar v = ( ~this._a00 & 0xFFFF ) + 1\n\t\tthis._a00 = v & 0xFFFF\n\t\tv = (~this._a16 & 0xFFFF) + (v >>> 16)\n\t\tthis._a16 = v & 0xFFFF\n\t\tv = (~this._a32 & 0xFFFF) + (v >>> 16)\n\t\tthis._a32 = v & 0xFFFF\n\t\tthis._a48 = (~this._a48 + (v >>> 16)) & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\n\t * @method eq\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.equals = UINT64.prototype.eq = function (other) {\n\t\treturn (this._a48 == other._a48) && (this._a00 == other._a00)\n\t\t\t && (this._a32 == other._a32) && (this._a16 == other._a16)\n\t}\n\n\t/**\n\t * Greater than (strict)\n\t * @method gt\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.greaterThan = UINT64.prototype.gt = function (other) {\n\t\tif (this._a48 > other._a48) return true\n\t\tif (this._a48 < other._a48) return false\n\t\tif (this._a32 > other._a32) return true\n\t\tif (this._a32 < other._a32) return false\n\t\tif (this._a16 > other._a16) return true\n\t\tif (this._a16 < other._a16) return false\n\t\treturn this._a00 > other._a00\n\t}\n\n\t/**\n\t * Less than (strict)\n\t * @method lt\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.lessThan = UINT64.prototype.lt = function (other) {\n\t\tif (this._a48 < other._a48) return true\n\t\tif (this._a48 > other._a48) return false\n\t\tif (this._a32 < other._a32) return true\n\t\tif (this._a32 > other._a32) return false\n\t\tif (this._a16 < other._a16) return true\n\t\tif (this._a16 > other._a16) return false\n\t\treturn this._a00 < other._a00\n\t}\n\n\t/**\n\t * Bitwise OR\n\t * @method or\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.or = function (other) {\n\t\tthis._a00 |= other._a00\n\t\tthis._a16 |= other._a16\n\t\tthis._a32 |= other._a32\n\t\tthis._a48 |= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise AND\n\t * @method and\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.and = function (other) {\n\t\tthis._a00 &= other._a00\n\t\tthis._a16 &= other._a16\n\t\tthis._a32 &= other._a32\n\t\tthis._a48 &= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise XOR\n\t * @method xor\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.xor = function (other) {\n\t\tthis._a00 ^= other._a00\n\t\tthis._a16 ^= other._a16\n\t\tthis._a32 ^= other._a32\n\t\tthis._a48 ^= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise NOT\n\t * @method not\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.not = function() {\n\t\tthis._a00 = ~this._a00 & 0xFFFF\n\t\tthis._a16 = ~this._a16 & 0xFFFF\n\t\tthis._a32 = ~this._a32 & 0xFFFF\n\t\tthis._a48 = ~this._a48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift right\n\t * @method shiftRight\n\t * @param {Number} number of bits to shift\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.shiftRight = UINT64.prototype.shiftr = function (n) {\n\t\tn %= 64\n\t\tif (n >= 48) {\n\t\t\tthis._a00 = this._a48 >> (n - 48)\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t} else if (n >= 32) {\n\t\t\tn -= 32\n\t\t\tthis._a00 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = (this._a48 >> n) & 0xFFFF\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t} else if (n >= 16) {\n\t\t\tn -= 16\n\t\t\tthis._a00 = ( (this._a16 >> n) | (this._a32 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a32 = (this._a48 >> n) & 0xFFFF\n\t\t\tthis._a48 = 0\n\t\t} else {\n\t\t\tthis._a00 = ( (this._a00 >> n) | (this._a16 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a16 >> n) | (this._a32 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a32 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a48 = (this._a48 >> n) & 0xFFFF\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift left\n\t * @method shiftLeft\n\t * @param {Number} number of bits to shift\n\t * @param {Boolean} allow overflow\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.shiftLeft = UINT64.prototype.shiftl = function (n, allowOverflow) {\n\t\tn %= 64\n\t\tif (n >= 48) {\n\t\t\tthis._a48 = this._a00 << (n - 48)\n\t\t\tthis._a32 = 0\n\t\t\tthis._a16 = 0\n\t\t\tthis._a00 = 0\n\t\t} else if (n >= 32) {\n\t\t\tn -= 32\n\t\t\tthis._a48 = (this._a16 << n) | (this._a00 >> (16-n))\n\t\t\tthis._a32 = (this._a00 << n) & 0xFFFF\n\t\t\tthis._a16 = 0\n\t\t\tthis._a00 = 0\n\t\t} else if (n >= 16) {\n\t\t\tn -= 16\n\t\t\tthis._a48 = (this._a32 << n) | (this._a16 >> (16-n))\n\t\t\tthis._a32 = ( (this._a16 << n) | (this._a00 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = (this._a00 << n) & 0xFFFF\n\t\t\tthis._a00 = 0\n\t\t} else {\n\t\t\tthis._a48 = (this._a48 << n) | (this._a32 >> (16-n))\n\t\t\tthis._a32 = ( (this._a32 << n) | (this._a16 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a16 << n) | (this._a00 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a00 = (this._a00 << n) & 0xFFFF\n\t\t}\n\t\tif (!allowOverflow) {\n\t\t\tthis._a48 &= 0xFFFF\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate left\n\t * @method rotl\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.rotateLeft = UINT64.prototype.rotl = function (n) {\n\t\tn %= 64\n\t\tif (n == 0) return this\n\t\tif (n >= 32) {\n\t\t\t// A.B.C.D\n\t\t\t// B.C.D.A rotl(16)\n\t\t\t// C.D.A.B rotl(32)\n\t\t\tvar v = this._a00\n\t\t\tthis._a00 = this._a32\n\t\t\tthis._a32 = v\n\t\t\tv = this._a48\n\t\t\tthis._a48 = this._a16\n\t\t\tthis._a16 = v\n\t\t\tif (n == 32) return this\n\t\t\tn -= 32\n\t\t}\n\n\t\tvar high = (this._a48 << 16) | this._a32\n\t\tvar low = (this._a16 << 16) | this._a00\n\n\t\tvar _high = (high << n) | (low >>> (32 - n))\n\t\tvar _low = (low << n) | (high >>> (32 - n))\n\n\t\tthis._a00 = _low & 0xFFFF\n\t\tthis._a16 = _low >>> 16\n\t\tthis._a32 = _high & 0xFFFF\n\t\tthis._a48 = _high >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate right\n\t * @method rotr\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.rotateRight = UINT64.prototype.rotr = function (n) {\n\t\tn %= 64\n\t\tif (n == 0) return this\n\t\tif (n >= 32) {\n\t\t\t// A.B.C.D\n\t\t\t// D.A.B.C rotr(16)\n\t\t\t// C.D.A.B rotr(32)\n\t\t\tvar v = this._a00\n\t\t\tthis._a00 = this._a32\n\t\t\tthis._a32 = v\n\t\t\tv = this._a48\n\t\t\tthis._a48 = this._a16\n\t\t\tthis._a16 = v\n\t\t\tif (n == 32) return this\n\t\t\tn -= 32\n\t\t}\n\n\t\tvar high = (this._a48 << 16) | this._a32\n\t\tvar low = (this._a16 << 16) | this._a00\n\n\t\tvar _high = (high >>> n) | (low << (32 - n))\n\t\tvar _low = (low >>> n) | (high << (32 - n))\n\n\t\tthis._a00 = _low & 0xFFFF\n\t\tthis._a16 = _low >>> 16\n\t\tthis._a32 = _high & 0xFFFF\n\t\tthis._a48 = _high >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Clone the current _UINT64_\n\t * @method clone\n\t * @return {Object} cloned UINT64\n\t */\n\tUINT64.prototype.clone = function () {\n\t\treturn new UINT64(this._a00, this._a16, this._a32, this._a48)\n\t}\n\n\tif (typeof define != 'undefined' && define.amd) {\n\t\t// AMD / RequireJS\n\t\tdefine([], function () {\n\t\t\treturn UINT64\n\t\t})\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t\t// Node.js\n\t\tmodule.exports = UINT64\n\t} else {\n\t\t// Browser\n\t\troot['UINT64'] = UINT64\n\t}\n\n})(this)\n","exports.UINT32 = require('./lib/uint32')\nexports.UINT64 = require('./lib/uint64')","const { UINT32, UINT64 } = require(\"cuint\");\nconst { possiblePatterns, patternReducer } = require(\"./optimizer\");\n\nconst initCalc = (arg, plus) =>\n  UINT32(0x6c078965)\n    .multiply(arg.clone().xor(arg.clone().shiftRight(30)))\n    .add(UINT32(plus));\n\nconst initContext = (seed) => {\n  const $c0 = initCalc(UINT32(seed), 1);\n  const $c1 = initCalc($c0, 2);\n  const $c2 = initCalc($c1, 3);\n  const $c3 = initCalc($c2, 4);\n  return [$c0, $c1, $c2, $c3];\n};\n\nconst getUINT32 = ($c) => {\n  const [$c0, $c1, $c2, $c3] = $c;\n  const n = $c0.clone().xor($c0.clone().shiftLeft(11));\n\n  $c.splice(\n    0,\n    5,\n    $c1,\n    $c2,\n    $c3,\n    n\n      .clone()\n      .xor(n.clone().shiftRight(8))\n      .xor($c3)\n      .xor($c3.clone().shiftRight(19))\n  );\n\n  return $c[3].clone();\n};\n\nconst randint = ($c, min, max) => {\n  return UINT64(getUINT32($c).toNumber())\n    .multiply(UINT64(max).subtract(UINT64(min)).add(UINT64(1)))\n    .shiftRight(32)\n    .add(UINT64(min))\n    .toNumber();\n};\n\nconst randfloat = ($c, a, b) => {\n  const val = UINT32(0x3f800000).or(getUINT32($c).shiftRight(9)).toNumber();\n\n  const view = new DataView(new ArrayBuffer(32));\n  view.setUint32(0, val);\n\n  const valf = view.getFloat32();\n\n  return a + (valf - 1.0) * (b - a);\n};\n\nconst randbool = ($c) => {\n  return getUINT32($c).and(UINT32(0x80000000)).toNumber();\n};\n\nconst intceil = (val) => {\n  return Math.trunc(val + 0.99999);\n};\n\nfunction* calculate(seed, pattern) {\n  const $c = initContext(seed);\n  const basePrice = randint($c, 90, 110);\n  yield basePrice;\n  const chance = randint($c, 0, 99);\n\n  // select the next pattern\n  let whatPattern;\n\n  switch (pattern) {\n    case 0:\n      if (chance < 20) {\n        whatPattern = 0;\n      } else if (chance < 50) {\n        whatPattern = 1;\n      } else if (chance < 65) {\n        whatPattern = 2;\n      } else {\n        whatPattern = 3;\n      }\n      break;\n    case 1:\n      if (chance < 50) {\n        whatPattern = 0;\n      } else if (chance < 55) {\n        whatPattern = 1;\n      } else if (chance < 75) {\n        whatPattern = 2;\n      } else {\n        whatPattern = 3;\n      }\n      break;\n    case 2:\n      if (chance < 25) {\n        whatPattern = 0;\n      } else if (chance < 70) {\n        whatPattern = 1;\n      } else if (chance < 75) {\n        whatPattern = 2;\n      } else {\n        whatPattern = 3;\n      }\n      break;\n    case 3:\n      if (chance < 45) {\n        whatPattern = 0;\n      } else if (chance < 70) {\n        whatPattern = 1;\n      } else if (chance < 85) {\n        whatPattern = 2;\n      } else {\n        whatPattern = 3;\n      }\n      break;\n    default:\n      whatPattern = 2;\n      break;\n  }\n\n  yield whatPattern;\n\n  const sellPrices = new Array(14);\n  sellPrices[0] = basePrice;\n  sellPrices[1] = basePrice;\n\n  let work;\n  let decPhaseLen1;\n  let decPhaseLen2;\n  let peakStart;\n  let hiPhaseLen1;\n  let hiPhaseLen2and3;\n  let hiPhaseLen3;\n  let rate;\n\n  switch (whatPattern) {\n    case 0:\n      // PATTERN 0: high, decreasing, high, decreasing, high\n      work = 2;\n      decPhaseLen1 = randbool($c) ? 3 : 2;\n      decPhaseLen2 = 5 - decPhaseLen1;\n\n      hiPhaseLen1 = randint($c, 0, 6);\n      hiPhaseLen2and3 = 7 - hiPhaseLen1;\n      hiPhaseLen3 = randint($c, 0, hiPhaseLen2and3 - 1);\n\n      // high phase 1\n      for (let i = 0; i < hiPhaseLen1; i += 1) {\n        yield (sellPrices[work++] = intceil(\n          randfloat($c, 0.9, 1.4) * basePrice\n        ));\n      }\n\n      // decreasing phase 1\n      rate = randfloat($c, 0.8, 0.6);\n      for (let i = 0; i < decPhaseLen1; i++) {\n        yield (sellPrices[work++] = intceil(rate * basePrice));\n        rate -= 0.04;\n        rate -= randfloat($c, 0, 0.06);\n      }\n\n      // high phase 2\n      for (let i = 0; i < hiPhaseLen2and3 - hiPhaseLen3; i++) {\n        yield (sellPrices[work++] = intceil(\n          randfloat($c, 0.9, 1.4) * basePrice\n        ));\n      }\n\n      // decreasing phase 2\n      rate = randfloat($c, 0.8, 0.6);\n      for (let i = 0; i < decPhaseLen2; i++) {\n        yield (sellPrices[work++] = intceil(rate * basePrice));\n        rate -= 0.04;\n        rate -= randfloat($c, 0, 0.06);\n      }\n\n      // high phase 3\n      for (let i = 0; i < hiPhaseLen3; i++) {\n        yield (sellPrices[work++] = intceil(\n          randfloat($c, 0.9, 1.4) * basePrice\n        ));\n      }\n      break;\n    case 1:\n      // PATTERN 1: decreasing middle, high spike, random low\n      peakStart = randint($c, 3, 9);\n      rate = randfloat($c, 0.9, 0.85);\n      for (work = 2; work < peakStart; work++) {\n        yield (sellPrices[work] = intceil(rate * basePrice));\n        rate -= 0.03;\n        rate -= randfloat($c, 0, 0.02);\n      }\n      yield (sellPrices[work++] = intceil(randfloat($c, 0.9, 1.4) * basePrice));\n      yield (sellPrices[work++] = intceil(randfloat($c, 1.4, 2.0) * basePrice));\n      yield (sellPrices[work++] = intceil(randfloat($c, 2.0, 6.0) * basePrice));\n      yield (sellPrices[work++] = intceil(randfloat($c, 1.4, 2.0) * basePrice));\n      yield (sellPrices[work++] = intceil(randfloat($c, 0.9, 1.4) * basePrice));\n      for (; work < 14; work++) {\n        yield (sellPrices[work] = intceil(randfloat($c, 0.4, 0.9) * basePrice));\n      }\n      break;\n    case 2:\n      // PATTERN 2: consistently decreasing\n      rate = 0.9;\n      rate -= randfloat($c, 0, 0.05);\n      for (work = 2; work < 14; work++) {\n        yield (sellPrices[work] = intceil(rate * basePrice));\n        rate -= 0.03;\n        rate -= randfloat($c, 0, 0.02);\n      }\n      break;\n    case 3:\n      // PATTERN 3: decreasing, spike, decreasing\n      peakStart = randint($c, 2, 9);\n\n      // decreasing phase before the peak\n      rate = randfloat($c, 0.9, 0.4);\n      for (work = 2; work < peakStart; work++) {\n        yield (sellPrices[work] = intceil(rate * basePrice));\n        rate -= 0.03;\n        rate -= randfloat($c, 0, 0.02);\n      }\n\n      yield (sellPrices[work++] = intceil(randfloat($c, 0.9, 1.4) * basePrice));\n      yield (sellPrices[work++] = intceil(randfloat($c, 0.9, 1.4) * basePrice));\n      rate = randfloat($c, 1.4, 2.0);\n      yield (sellPrices[work++] =\n        intceil(randfloat($c, 1.4, rate) * basePrice) - 1);\n      yield (sellPrices[work++] = intceil(rate * basePrice));\n      yield (sellPrices[work++] =\n        intceil(randfloat($c, 1.4, rate) * basePrice) - 1);\n\n      // decreasing phase after the peak\n      if (work < 14) {\n        rate = randfloat($c, 0.9, 0.4);\n        for (; work < 14; work++) {\n          yield (sellPrices[work] = intceil(rate * basePrice));\n          rate -= 0.03;\n          rate -= randfloat($c, 0, 0.02);\n        }\n      }\n      break;\n    default:\n      break;\n  }\n}\n\nconst $average = (array, index, count, next) =>\n  array.splice(index, 1, (count * array[index] + next) / (count + 1));\n\nconst $minMax = (current, result) => {\n  if (current[0] > result) current.splice(0, 1, result);\n  if (current[1] < result) current.splice(1, 1, result);\n};\n\nconst makePaternFilter = (patterns) => {\n  return patterns\n    .map((options, i) => [options.length, i])\n    .filter(([v]) => v)\n    .map(([, i]) => i);\n};\n\nconst optimizeFilters = (filters) => {\n  const [basePrice = 0] = filters;\n  const patterns = possiblePatterns(filters);\n  const minMaxPatterns = patternReducer(patterns);\n  // Create a copy, with size 14. [baseprice, patterns, ...weekPrices]\n  const $filters = Array.from({ length: 14 }, (val, i) => filters[i + 1] || 0);\n\n  const patternFilter = makePaternFilter(patterns);\n  return $filters.map((filter, index) => {\n    if (index === 0) {\n      return [basePrice] || minMaxPatterns[0];\n    }\n    if (index === 1) {\n      return patternFilter;\n    }\n    return filter ? [filter, filter] : minMaxPatterns[index];\n  });\n};\n\nfunction* yieldCalculate(filters = []) {\n  let count = 0;\n  let total = 0;\n  const average = Array.from({ length: 13 }, () => 0);\n  const minMax = Array.from({ length: 13 }, () => [Infinity, -Infinity]);\n  const results = Array.from({ length: 13 }, () => 0);\n  const $filters = optimizeFilters(filters);\n  const randomStart = Math.trunc(Math.random() * 0xffffffff);\n  for (let i = 0; i < 0xffffffff; i++) {\n    for (let ii = 0; ii < 4; ii++) {\n      const calculator = calculate((randomStart + i) % 0xffffffff, ii);\n      const success = $filters.every((filter, index) => {\n        const { value } = calculator.next();\n        // Short circuit more useless iterations\n        if (index === 0 && !filter.includes(value)) ii += 4;\n        if (index === 1 && !filter.includes(value)) ii += 4;\n\n        // Copy the resulting array\n        results.splice(index, 1, value);\n        const [min, max] = filter;\n        return min <= value && max >= value;\n      });\n      if (success) {\n        // eslint-disable-next-line no-loop-func\n        results.forEach((result, index) => {\n          $average(average, index, count, result);\n          $minMax(minMax[index], result);\n        });\n        count += 1;\n      }\n    }\n    total += 1;\n    yield [total, count, minMax, average];\n  }\n}\n\nfunction* yieldCalculateByTime(filters = [], ms) {\n  const calculator = yieldCalculate(filters);\n  let flag = Date.now();\n  let result = calculator.next();\n  while (!result.done) {\n    if (Date.now() - flag > ms) {\n      yield result.value;\n      flag = Date.now();\n    }\n    result = calculator.next();\n  }\n}\n\nmodule.exports = {\n  yieldCalculate,\n  yieldCalculateByTime,\n  initContext,\n  randint,\n  randfloat,\n  randbool,\n};\n","const { yieldCalculateByTime } = require(\"./calculator\");\n\nlet paused;\nlet instance;\nlet result;\n\nconst workUnit = () => {\n  if (!instance) return;\n  result = instance.next();\n  if (!result.done && !paused) {\n    setTimeout(workUnit, 0);\n  }\n  postMessage(result);\n};\n\nonmessage = ({ data: [action, ...args] }) => {\n  console.log(\"worker message received\", action);\n  switch (action) {\n    case \"start\":\n      paused = false;\n      instance = yieldCalculateByTime(args, 1000);\n      workUnit();\n      break;\n    case \"pause\":\n      paused = true;\n      break;\n    case \"stop\":\n      paused = true;\n      instance = null;\n      break;\n    case \"restart\":\n      paused = false;\n      if (!instance) instance = yieldCalculateByTime(args, 1000);\n      workUnit();\n      break;\n    default:\n      break;\n  }\n};\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}